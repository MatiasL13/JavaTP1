/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aprender;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author matias
 */
public class ConverterGUI extends javax.swing.JFrame {

    /**
     * Creates new form ConverterGUI
     */
    public ConverterGUI() {
        initComponents();
    }
    
    private boolean toCm = true;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        centimetersTextField = new javax.swing.JTextField();
        inchesTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        resultTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Convertir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Centimetros");

        centimetersTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                centimetersTextFieldFocusGained(evt);
            }
        });
        centimetersTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                centimetersTextFieldMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                centimetersTextFieldMouseClicked(evt);
            }
        });

        inchesTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inchesTextFieldFocusGained(evt);
            }
        });
        inchesTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                inchesTextFieldMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inchesTextFieldMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                inchesTextFieldMouseExited(evt);
            }
        });

        jLabel2.setText("Pulgadas");

        resultTextField.setText("Resultado de la conversion");
        resultTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(resultTextField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inchesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(centimetersTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(centimetersTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inchesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(resultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static boolean empty( final String s ) {
        return s == null || s.trim().isEmpty();
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String result;
        try{
            if(toCm){
            String centimetersContent = centimetersTextField.getText();
            if(!empty(centimetersContent))
            {
                double inches = Double.parseDouble(centimetersContent) / 2.54;
                result = String.format("%.2f",inches);
                inchesTextField.setText(result);
                result =  centimetersTextField.getText() +" Centimetros son " +  result + " Pulgadas";
            }else{
                result = "El campo centimetros esta vacio!";
            }
            
        }else{
            String inchesContent = inchesTextField.getText();
            if(!empty(inchesContent))
            {
                double centimeters = Double.parseDouble(inchesContent) * 2.54;
                result = String.format("%.2f",centimeters);
                centimetersTextField.setText(result);
                result = inchesTextField.getText()+ " Pulgadas son "+ result + " Centimetros";
            }else{
                result = "El campo pulgadas esta vacio!";
            }
        }
        }catch(Exception ex){
            result = "Ingrese solo valores numericos";
        }
        
        
        resultTextField.setText(result);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void resultTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultTextFieldActionPerformed

    private void centimetersTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_centimetersTextFieldMouseClicked
   //   toCm = true;
    }//GEN-LAST:event_centimetersTextFieldMouseClicked

    private void inchesTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inchesTextFieldMouseClicked
      //toCm = false;
    }//GEN-LAST:event_inchesTextFieldMouseClicked

    private void inchesTextFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inchesTextFieldMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_inchesTextFieldMouseExited

    private void inchesTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inchesTextFieldMousePressed
     // toCm = false;
    }//GEN-LAST:event_inchesTextFieldMousePressed

    private void centimetersTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_centimetersTextFieldMousePressed
       // toCm = true;
    }//GEN-LAST:event_centimetersTextFieldMousePressed

    private void centimetersTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_centimetersTextFieldFocusGained
         toCm = true;
    }//GEN-LAST:event_centimetersTextFieldFocusGained

    private void inchesTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inchesTextFieldFocusGained
      toCm = false;
    }//GEN-LAST:event_inchesTextFieldFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConverterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConverterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConverterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConverterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConverterGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField centimetersTextField;
    private javax.swing.JTextField inchesTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField resultTextField;
    // End of variables declaration//GEN-END:variables
}
